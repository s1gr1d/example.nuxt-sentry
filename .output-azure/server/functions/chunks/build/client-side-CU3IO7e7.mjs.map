{"version":3,"file":"client-side-CU3IO7e7.mjs","sources":["../../../../../node_modules/nuxt/dist/app/components/nuxt-error-boundary.js","../../../../../components/Quote.vue","../../../../../pages/client-side.vue"],"sourcesContent":["import { defineComponent, onErrorCaptured, ref } from \"vue\";\nimport { useNuxtApp } from \"../nuxt.js\";\nexport default defineComponent({\n  name: \"NuxtErrorBoundary\",\n  inheritAttrs: false,\n  emits: {\n    error(_error) {\n      return true;\n    }\n  },\n  setup(_props, { slots, emit }) {\n    const error = ref(null);\n    const nuxtApp = useNuxtApp();\n    if (import.meta.client) {\n      onErrorCaptured((err, target, info) => {\n        if (!nuxtApp.isHydrating || !nuxtApp.payload.serverRendered) {\n          emit(\"error\", err);\n          nuxtApp.hooks.callHook(\"vue:error\", err, target, info);\n          error.value = err;\n          return false;\n        }\n      });\n    }\n    function clearError() {\n      error.value = null;\n    }\n    return () => error.value ? slots.error?.({ error, clearError }) : slots.default?.();\n  }\n});\n","<script setup>\nimport { useFetch } from \"#imports\";\n\nconst props = defineProps({\n  id: Number,\n});\nconst {\n  data: quote,\n  status,\n  error,\n} = await useFetch(() => `https://dummyjson.com/quotes/${props.id}`);\n</script>\n\n<template>\n  <div>\n    <p v-if=\"status === 'pending'\">Fetching...</p>\n    <pre v-else-if=\"error\">Could not load quote: {{ error.data }}</pre>\n    <figure v-else class=\"quote\">\n      <blockquote>{{ quote.quote }}</blockquote>\n      <figcaption>&mdash; {{ quote.author }}</figcaption>\n    </figure>\n  </div>\n</template>\n","<script setup>\nimport { Quote, ErrorButton, LazyRandomList } from \"#components\";\nimport { ref } from \"#imports\";\n\nconst id = ref(1);\nconst showLazy = ref(false);\n\n</script>\n\n<template>\n  <ContentDoc path=\"/document\" />\n  <NuxtErrorBoundary @error=\"err => console.log('hello', err) \">\n    <button @click=\"nonExistentMethod()\">Click me! (non existent method)</button>\n    <ErrorButton />\n  </NuxtErrorBoundary>\n\n  <div>\n    <h2>Fetch Quotes</h2>\n    <p>Example of data fetching inside a component:</p>\n    <p>\n      <button @click=\"id--\">Previous</button> -\n      <button @click=\"id++\">Next</button>\n    </p>\n    <Quote :id=\"id\" />\n  </div>\n</template>\n"],"names":["_withAsyncContext"],"mappings":"","x_google_ignoreList":[0]}